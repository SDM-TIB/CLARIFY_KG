@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix rml: <http://semweb.mmlab.be/ns/rml#> .
@prefix ql: <http://semweb.mmlab.be/ns/ql#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix schema: <http://schema.org/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix fnml: <http://semweb.mmlab.be/ns/fnml#> .
@prefix fno: <https://w3id.org/function/ontology#> .
@prefix clarifyFun: <http://clarify2020.eu/function/> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix clarify: <http://clarify2020.eu/vocab/> .

<LCPatient>
	rml:logicalSource [ rml:source "/mnt/e/data/data/lc_clinical_notes/family_antecedents_treatment_line.csv";
						rml:referenceFormulation ql:CSV;
						];
	rr:subjectMap [
		rr:template "http://clarify2020.eu/entity/{ehr}";
	];		
	rr:predicateObjectMap [
		rr:predicate clarify:hasFamilyHistory;
		rr:objectMap [ 
			rr:parentTriplesMap <FamilyHistory>
		]
	].	

<FamilyHistory>
	rml:logicalSource [ rml:source "/mnt/e/data/data/lc_clinical_notes/family_antecedents_treatment_line.csv";
						rml:referenceFormulation ql:CSV;
						];
	rr:subjectMap [
		rr:template "http://clarify2020.eu/entity/{ehr}_{treatment_line}";
		rr:class clarify:FamilyHistory;
	];
	rr:predicateObjectMap [
		rr:predicate clarify:treatmentLineNumber;
		rr:objectMap [
			rr:parentTriplesMap <TreatmentLineNumber>
		]
	];	
	rr:predicateObjectMap [
		rr:predicate clarify:hasFamilyCancerType;
		rr:objectMap [
			rr:parentTriplesMap <CancerType>
		]
	];	
	rr:predicateObjectMap [
		rr:predicate clarify:familyType;
		rr:objectMap [
			rr:parentTriplesMap <FamilyType>
		]
	].

<TreatmentLineNumber>
	rml:logicalSource [ rml:source "/mnt/e/data/data/lc_clinical_notes/family_antecedents_treatment_line.csv";
						rml:referenceFormulation ql:CSV;
						];
	rr:subjectMap [
		rr:template "http://clarify2020.eu/entity/{treatment_line}";
		rr:class clarify:TreatmentLineNumber;
	].

<CancerType>
	rml:logicalSource [ rml:source "/mnt/e/data/data/lc_clinical_notes/family_antecedents_treatment_line.csv";
						rml:referenceFormulation ql:CSV;
						];
	rr:subjectMap <cancer_type_Function> ;
	rr:termType rr:IRI;

	rr:predicateObjectMap [
		rr:predicate rdf:type;
		rr:objectMap [
			rr:template "http://clarify2020.eu/vocab/CancerType";		
		]
	];
	rr:predicateObjectMap [
		rr:predicate clarify:hasOriginalValue;
		rr:objectMap [
			rml:reference "cancer_type";		
		]
	].

<FamilyType>
	rml:logicalSource [ rml:source "/mnt/e/data/data/lc_clinical_notes/family_antecedents_treatment_line.csv";
						rml:referenceFormulation ql:CSV;
						];	
	rr:subjectMap <family_member_Function> ;
	rr:termType rr:IRI;

	rr:predicateObjectMap [
		rr:predicate rdf:type;
		rr:objectMap [
			rr:template "http://clarify2020.eu/vocab/FamilyType";		
		]
	];
	rr:predicateObjectMap [
		rr:predicate clarify:hasOriginalValue;
		rr:objectMap [
			rml:reference "family_member";		
		]
	].

#######################################
############## Functions ##############
#######################################

<cancer_type_Function>
    fnml:functionValue [
        rml:logicalSource [ rml:source "/mnt/e/data/data/lc_clinical_notes/family_antecedents_treatment_line.csv";
        rml:referenceFormulation ql:CSV 
                            ];
        rr:predicateObjectMap [
            rr:predicate fno:executes ;
            rr:objectMap [ 
                rr:constant clarifyFun:findSemantic 
            ]
        ];   
        rr:predicateObjectMap [
            rr:predicate clarifyFun:tableName;
            rr:objectMap [ 
                rr:constant "family_antecedents_treatment_line" 
            ]
        ];
        rr:predicateObjectMap [
            rr:predicate clarifyFun:columnName;
            rr:objectMap [ 
                rr:constant "cancer_type" 
            ]
        ]; 
        rr:predicateObjectMap [
            rr:predicate clarifyFun:resource;
            rr:objectMap [ 
                rr:constant "http://clarify2020.eu/entity/" 
            ]
        ];  
        rr:predicateObjectMap [
            rr:predicate clarifyFun:columnValue;
            rr:objectMap [ 
                rml:reference "cancer_type" 
            ]
        ];                         
    ].	

<family_member_Function>
    fnml:functionValue [
        rml:logicalSource [ rml:source "/mnt/e/data/data/lc_clinical_notes/family_antecedents_treatment_line.csv";
        rml:referenceFormulation ql:CSV 
                            ];
        rr:predicateObjectMap [
            rr:predicate fno:executes ;
            rr:objectMap [ 
                rr:constant clarifyFun:findSemantic 
            ]
        ];   
        rr:predicateObjectMap [
            rr:predicate clarifyFun:tableName;
            rr:objectMap [ 
                rr:constant "family_antecedents_treatment_line" 
            ]
        ];
        rr:predicateObjectMap [
            rr:predicate clarifyFun:columnName;
            rr:objectMap [ 
                rr:constant "family_member" 
            ]
        ]; 
        rr:predicateObjectMap [
            rr:predicate clarifyFun:resource;
            rr:objectMap [ 
                rr:constant "http://clarify2020.eu/entity/" 
            ]
        ];  
        rr:predicateObjectMap [
            rr:predicate clarifyFun:columnValue;
            rr:objectMap [ 
                rml:reference "family_member" 
            ]
        ];                         
    ].
