@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix rml: <http://semweb.mmlab.be/ns/rml#> .
@prefix ql: <http://semweb.mmlab.be/ns/ql#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix schema: <http://schema.org/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix clarify: <http://clarify2020.eu/vocab/> .

<LCPatient>
	rml:logicalSource [ rml:source "/mnt/e/data/data/lc_clinical_notes/alk_mutation.csv";
						rml:referenceFormulation ql:CSV;
						];
	rr:subjectMap [
		rr:template "http://clarify2020.eu/LCPatient/{EHR}";
	];
	rr:predicateObjectMap [
		rr:predicate clarify:hasBiomarker;
		rr:objectMap [ 
			rr:parentTriplesMap <Biomarker>
		]
	].	

<Biomarker>
	rml:logicalSource [ rml:source "/mnt/e/data/data/lc_clinical_notes/alk_mutation.csv";
						rml:referenceFormulation ql:CSV;
						];
	rr:subjectMap [
		rr:template "http://clarify2020.eu/Biomarker/ALK";
		rr:class clarify:Biomarker;
	];	
	rr:predicateObjectMap [
		rr:predicate clarify:hasTestIHQResult;
		rr:objectMap [
			rr:parentTriplesMap <BiomarkerIHQResult>		
		]
	];	
	rr:predicateObjectMap [
		rr:predicate clarify:hasTestFISHResult;
		rr:objectMap [
			rr:parentTriplesMap <BiomarkerFISHResult>		
		]
	];
	rr:predicateObjectMap [
		rr:predicate clarify:hasTestRNAResult;
		rr:objectMap [
			rr:parentTriplesMap <BiomarkerRNAResult>		
		]
	];				
	rr:predicateObjectMap [
		rr:predicate clarify:biomarkerSpecification;
		rr:objectMap [
			rml:reference "study_performed";		
		]
	].	

<BiomarkerIHQResult>
	rml:logicalSource [ rml:source "/mnt/e/data/data/lc_clinical_notes/alk_mutation.csv";
						rml:referenceFormulation ql:CSV;
						];
	rr:subjectMap <ihq_Function> ;
	rr:predicateObjectMap [
		rr:predicate rdf:type;
		rr:objectMap [
			rr:template "http://clarify2020.eu/vocab/BiomarkerTestResult";		
		]
	];
	rr:predicateObjectMap [
		rr:predicate clarify:hasOriginalValue;
		rr:objectMap [
			rml:reference "result_alk_ihq";
			rr:dataType xsd:int;		
		]
	].	

<BiomarkerFISHResult>
	rml:logicalSource [ rml:source "/mnt/e/data/data/lc_clinical_notes/alk_mutation.csv";
						rml:referenceFormulation ql:CSV;
						];
	rr:subjectMap <fish_Function> ;
	rr:predicateObjectMap [
		rr:predicate rdf:type;
		rr:objectMap [
			rr:template "http://clarify2020.eu/vocab/BiomarkerTestResult";		
		]
	];
	rr:predicateObjectMap [
		rr:predicate clarify:hasOriginalValue;
		rr:objectMap [
			rml:reference "result_alk_fish";
			rr:dataType xsd:int;		
		]
	].			

<BiomarkerRNAResult>
	rml:logicalSource [ rml:source "/mnt/e/data/data/lc_clinical_notes/alk_mutation.csv";
						rml:referenceFormulation ql:CSV;
						];
	rr:subjectMap <rna_Function> ;
	rr:predicateObjectMap [
		rr:predicate rdf:type;
		rr:objectMap [
			rr:template "http://clarify2020.eu/vocab/BiomarkerTestResult";		
		]
	];
	rr:predicateObjectMap [
		rr:predicate clarify:hasOriginalValue;
		rr:objectMap [
			rml:reference "result_alk_rna";
			rr:dataType xsd:int;		
		]
	].

#########

<ihq_Function>
    fnml:functionValue [
        rml:logicalSource [ rml:source "/mnt/e/data/data/lc_clinical_notes/alk_mutation.csv";
        rml:referenceFormulation ql:CSV 
                            ];
        rr:predicateObjectMap [
            rr:predicate fno:executes ;
            rr:objectMap [ 
                rr:constant fun:findSemantic 
            ]
        ];   
        rr:predicateObjectMap [
            rr:predicate fun:tableName;
            rr:objectMap [ 
                rr:constant "alk_mutation" 
            ]
        ];
        rr:predicateObjectMap [
            rr:predicate fun:columnName;
            rr:objectMap [ 
                rr:constant "result_alk_ihq" 
            ]
        ];  
        rr:predicateObjectMap [
            rr:predicate fun:columnValue;
            rr:objectMap [ 
                rml:reference "result_alk_ihq" 
            ]
        ];                         
    ].

<fish_Function>
    fnml:functionValue [
        rml:logicalSource [ rml:source "/mnt/e/data/data/lc_clinical_notes/alk_mutation.csv";
        rml:referenceFormulation ql:CSV 
                            ];
        rr:predicateObjectMap [
            rr:predicate fno:executes ;
            rr:objectMap [ 
                rr:constant fun:findSemantic 
            ]
        ];   
        rr:predicateObjectMap [
            rr:predicate fun:tableName;
            rr:objectMap [ 
                rr:constant "alk_mutation" 
            ]
        ];
        rr:predicateObjectMap [
            rr:predicate fun:columnName;
            rr:objectMap [ 
                rr:constant "result_alk_fish" 
            ]
        ];  
        rr:predicateObjectMap [
            rr:predicate fun:columnValue;
            rr:objectMap [ 
                rml:reference "result_alk_fish" 
            ]
        ];                         
    ].

<rna_Function>
    fnml:functionValue [
        rml:logicalSource [ rml:source "/mnt/e/data/data/lc_clinical_notes/alk_mutation.csv";
        rml:referenceFormulation ql:CSV 
                            ];
        rr:predicateObjectMap [
            rr:predicate fno:executes ;
            rr:objectMap [ 
                rr:constant fun:findSemantic 
            ]
        ];   
        rr:predicateObjectMap [
            rr:predicate fun:tableName;
            rr:objectMap [ 
                rr:constant "alk_mutation" 
            ]
        ];
        rr:predicateObjectMap [
            rr:predicate fun:columnName;
            rr:objectMap [ 
                rr:constant "result_alk_rna" 
            ]
        ];  
        rr:predicateObjectMap [
            rr:predicate fun:columnValue;
            rr:objectMap [ 
                rml:reference "result_alk_rna" 
            ]
        ];                         
    ].



