@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix rml: <http://semweb.mmlab.be/ns/rml#> .
@prefix ql: <http://semweb.mmlab.be/ns/ql#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix schema: <http://schema.org/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix clarify: <http://clarify2020.eu/vocab/> .

<ProteinEnries>
    a rr:TriplesMap;
    rml:logicalSource [ rml:source "./data/hsa-entry.csv";
                rml:referenceFormulation ql:CSV
                ];
    rr:subjectMap [
        rr:template "http://clarify2020.eu/entity/{id}";
        rr:class clarify:Protein
    ];
    rr:predicateObjectMap [
        rr:predicate clarify:hasProteinType;
        rr:objectMap [ 
            rr:template "http://clarify2020.eu/entity/{type}" 
        ]
    ];
    rr:predicateObjectMap [
        rr:predicate prov:has_provenance;
        rr:objectMap [
            rr:template "http://clarify2020.eu/entity/KEGG"
        ]
    ];
    rr:predicateObjectMap [
        rr:predicate clarify:hasProteinName;
        rr:objectMap [
            rr:parentTriplesMap <KeggUniprot>;
        rr:joinCondition [
            rr:child "name";
            rr:parent "gene_id";
        ]
        ]
    ].

<KeggUniprot>
    a rr:TriplesMap;
    rml:logicalSource [ rml:source "./data/KEGG-to-Uniprot.csv";
                rml:referenceFormulation ql:CSV
                ];
    rr:subjectMap [
        rr:template "http://clarify2020.eu/entity/{gene_id}";
        rr:class clarify:Protein
    ];
     rr:predicateObjectMap [
        rr:predicate clarify:hasSymbol;
        rr:objectMap [
            rr:template "http://clarify2020.eu/entity/{symbol}"
        ]
    ];
     rr:predicateObjectMap [
        rr:predicate owl:sameAs;
        rr:objectMap [
            rr:template "http://purl.uniprot.org/uniprot/{uniprot_id}"
        ]
    ].


<ProteinRelations>
    a rr:TriplesMap;
    rml:logicalSource [ rml:source "./data/hsa-relation.csv";
                rml:referenceFormulation ql:CSV
                ];
    rr:subjectMap [
        rr:template "http://clarify2020.eu/entity/{entry1}";
        rr:class clarify:Protein
    ];
     rr:predicateObjectMap [
        rr:predicate clarify:hasRelationship;
        rr:objectMap [
            rr:template "http://clarify2020.eu/entity/{entry2}"
        ]
    ].
