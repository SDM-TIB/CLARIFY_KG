@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix rml: <http://semweb.mmlab.be/ns/rml#> .
@prefix ql: <http://semweb.mmlab.be/ns/ql#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix schema: <http://schema.org/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix fnml: <http://semweb.mmlab.be/ns/fnml#> .
@prefix fno: <https://w3id.org/function/ontology#> .
@prefix clarifyFun: <http://clarify2020.eu/function/> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix clarify: <http://clarify2020.eu/vocab/> .

<LCPatient_lc_clinical_notes_SLCG_monitoring_iterations>
	rml:logicalSource [ rml:source "/mnt/e/CLARIFY-KG-pipeline/data/lc_clinical_notes_SLCG/monitoring_iterations.csv";
						rml:referenceFormulation ql:CSV;
						];
	rr:subjectMap [
		rr:template "http://clarify2020.eu/entity/{ehr}";
        rr:class clarify:LCPatient
	];
	rr:predicateObjectMap [
		rr:predicate clarify:hasMonitoring;
		rr:objectMap [ 
			rr:parentTriplesMap <StatusEvolution_lc_clinical_notes_SLCG_monitoring_iterations>
		]
	].


<StatusEvolution_lc_clinical_notes_SLCG_monitoring_iterations>
	rml:logicalSource [ rml:source "/mnt/e/CLARIFY-KG-pipeline/data/lc_clinical_notes_SLCG/monitoring_iterations.csv";
						rml:referenceFormulation ql:CSV;
						];
	rr:subjectMap [
		rr:template "http://clarify2020.eu/entity/{ehr}_StatusEvolutionIteration_{monitoring_iteration}";
		rr:class clarify:StatusEvolution;
	];
	rr:predicateObjectMap [
		rr:predicate clarify:performedMonitoring_OrNot;
		rr:objectMap [ 
			rr:parentTriplesMap <PerformedMonitoring_lc_clinical_notes_SLCG_monitoring_iterations>
		]
	];
	rr:predicateObjectMap [
		rr:predicate clarify:lastMonitoringDate;
		rr:objectMap [
			rml:reference "date_last_contact";
			rr:datatype xsd:date
		]
	];	
	rr:predicateObjectMap [
		rr:predicate clarify:hasCurrentStatus;
		rr:objectMap [
			rr:parentTriplesMap <CurrentStatus_lc_clinical_notes_SLCG_monitoring_iterations>	
		]
	];
	rr:predicateObjectMap [
		rr:predicate clarify:deathDate;
		rr:objectMap [
			rml:reference "death_date";
			rr:datatype xsd:date
		]
	];	
	rr:predicateObjectMap [
		rr:predicate clarify:hasCauseOfDeath;
		rr:objectMap [
			rr:parentTriplesMap <CauseOfDeath_lc_clinical_notes_SLCG_monitoring_iterations>		
		]
	];
	rr:predicateObjectMap [
		rr:predicate clarify:hasReasonOfDeath;
		rr:objectMap [
			rr:parentTriplesMap <ReasonOfDeathv_monitoring_iterations>	
		]
	];	
	rr:predicateObjectMap [
		rr:predicate clarify:hasSecondNeoplasm;
		rr:objectMap [
			rr:parentTriplesMap <second_neoplasm_lc_clinical_notes_SLCG_monitoring_iterations>		
		]
	];
    rr:predicateObjectMap [
        rr:predicate clarify:hasSecondNeoplasmType;
        rr:objectMap [
            rr:parentTriplesMap <second_neoplasm_type_lc_clinical_notes_SLCG_monitoring_iterations>       
        ]
    ].

<PerformedMonitoring_lc_clinical_notes_SLCG_monitoring_iterations>
	rml:logicalSource [ rml:source "/mnt/e/CLARIFY-KG-pipeline/data/lc_clinical_notes_SLCG/monitoring_iterations.csv";
						rml:referenceFormulation ql:CSV;
						];
	rr:subjectMap <PerformedMonitoring_Function_lc_clinical_notes_SLCG_monitoring_iterations> ; 
	rr:termType rr:IRI;

	rr:predicateObjectMap [
		rr:predicate rdf:type;
		rr:objectMap [
			rr:template "http://clarify2020.eu/vocab/PerformedMonitoring";		
		]
	];
	rr:predicateObjectMap [
		rr:predicate clarify:hasOriginalValue;
		rr:objectMap [
			rml:reference "monitoring_performed";		
		]
	].

<CurrentStatus_lc_clinical_notes_SLCG_monitoring_iterations>
	rml:logicalSource [ rml:source "/mnt/e/CLARIFY-KG-pipeline/data/lc_clinical_notes_SLCG/monitoring_iterations.csv";
						rml:referenceFormulation ql:CSV;
						];
	rr:subjectMap <CurrentStatus_Function_lc_clinical_notes_SLCG_monitoring_iterations> ;
	rr:termType rr:IRI;

	rr:predicateObjectMap [
		rr:predicate rdf:type;
		rr:objectMap [
			rr:template "http://clarify2020.eu/vocab/CurrentStatus";		
		]
	];
	rr:predicateObjectMap [
		rr:predicate clarify:hasOriginalValue;
		rr:objectMap [
			rml:reference "situation";		
		]
	]. 

<CauseOfDeath_lc_clinical_notes_SLCG_monitoring_iterations>
	rml:logicalSource [ rml:source "/mnt/e/CLARIFY-KG-pipeline/data/lc_clinical_notes_SLCG/monitoring_iterations.csv";
						rml:referenceFormulation ql:CSV;
						];
	rr:subjectMap <CauseOfDeath_Function_lc_clinical_notes_SLCG_monitoring_iterations> ;
	rr:termType rr:IRI;

	rr:predicateObjectMap [
		rr:predicate rdf:type;
		rr:objectMap [
			rr:template "http://clarify2020.eu/vocab/CauseOfDeath";		
		]
	];
	rr:predicateObjectMap [
		rr:predicate clarify:hasOriginalValue;
		rr:objectMap [
			rml:reference "death_cause";		
		]
	]. 

<ReasonOfDeath_lc_clinical_notes_SLCG_monitoring_iterations>
	rml:logicalSource [ rml:source "/mnt/e/CLARIFY-KG-pipeline/data/lc_clinical_notes_SLCG/monitoring_iterations.csv";
						rml:referenceFormulation ql:CSV;
						];
	rr:subjectMap <ReasonOfDeath_Function_lc_clinical_notes_SLCG_monitoring_iterations> ;
	rr:termType rr:IRI;

	rr:predicateObjectMap [
		rr:predicate rdf:type;
		rr:objectMap [
			rr:template "http://clarify2020.eu/vocab/ReasonOfDeath";		
		]
	];
	rr:predicateObjectMap [
		rr:predicate clarify:hasOriginalValue;
		rr:objectMap [
			rml:reference "death_reason";		
		]
	]. 

<second_neoplasm_lc_clinical_notes_SLCG_monitoring_iterations>
	rml:logicalSource [ rml:source "/mnt/e/CLARIFY-KG-pipeline/data/lc_clinical_notes_SLCG/monitoring_iterations.csv";
						rml:referenceFormulation ql:CSV;
						];
	rr:subjectMap <second_neoplasm_Function_lc_clinical_notes_SLCG_monitoring_iterations> ;
	rr:termType rr:IRI;

	rr:predicateObjectMap [
		rr:predicate rdf:type;
		rr:objectMap [
			rr:template "http://clarify2020.eu/vocab/SecondNeoplasm";		
		]
	];
	rr:predicateObjectMap [
		rr:predicate clarify:hasOriginalValue;
		rr:objectMap [
			rml:reference "second_neoplasm_presence";		
		]
	]. 				

<second_neoplasm_type_lc_clinical_notes_SLCG_monitoring_iterations>
    rml:logicalSource [ rml:source "/mnt/e/CLARIFY-KG-pipeline/data/lc_clinical_notes_SLCG/monitoring_iterations.csv";
                        rml:referenceFormulation ql:CSV;
                        ];
    rr:subjectMap <second_neoplasm_type_Function_lc_clinical_notes_SLCG_monitoring_iterations> ;
    rr:termType rr:IRI;

    rr:predicateObjectMap [
        rr:predicate rdf:type;
        rr:objectMap [
            rr:template "http://clarify2020.eu/vocab/SecondNeoplasmType";       
        ]
    ];
    rr:predicateObjectMap [
        rr:predicate clarify:hasOriginalValue;
        rr:objectMap [
            rml:reference "second_neoplasm_type";       
        ]
    ].  

#######################################
############## Functions ##############
#######################################

<PerformedMonitoring_Function_lc_clinical_notes_SLCG_monitoring_iterations>
    fnml:functionValue [
        rml:logicalSource [ rml:source "/mnt/e/CLARIFY-KG-pipeline/data/lc_clinical_notes_SLCG/monitoring_iterations.csv";
        rml:referenceFormulation ql:CSV 
                            ];
        rr:predicateObjectMap [
            rr:predicate fno:executes ;
            rr:objectMap [ 
                rr:constant clarifyFun:findSemantic 
            ]
        ];   
        rr:predicateObjectMap [
            rr:predicate clarifyFun:tableName;
            rr:objectMap [ 
                rr:constant "monitoring_iterations" 
            ]
        ];
        rr:predicateObjectMap [
            rr:predicate clarifyFun:columnName;
            rr:objectMap [ 
                rr:constant "monitoring_performed" 
            ]
        ];
        rr:predicateObjectMap [
            rr:predicate clarifyFun:resource;
            rr:objectMap [ 
                rr:constant "http://clarify2020.eu/entity/" 
            ]
        ];   
        rr:predicateObjectMap [
            rr:predicate clarifyFun:columnValue;
            rr:objectMap [ 
                rml:reference "monitoring_performed" 
            ]
        ];                         
    ].
<CurrentStatus_Function_lc_clinical_notes_SLCG_monitoring_iterations>
    fnml:functionValue [
        rml:logicalSource [ rml:source "/mnt/e/CLARIFY-KG-pipeline/data/lc_clinical_notes_SLCG/monitoring_iterations.csv";
        rml:referenceFormulation ql:CSV 
                            ];
        rr:predicateObjectMap [
            rr:predicate fno:executes ;
            rr:objectMap [ 
                rr:constant clarifyFun:findSemantic 
            ]
        ];   
        rr:predicateObjectMap [
            rr:predicate clarifyFun:tableName;
            rr:objectMap [ 
                rr:constant "monitoring_iterations" 
            ]
        ];
        rr:predicateObjectMap [
            rr:predicate clarifyFun:columnName;
            rr:objectMap [ 
                rr:constant "situation" 
            ]
        ];
        rr:predicateObjectMap [
            rr:predicate clarifyFun:resource;
            rr:objectMap [ 
                rr:constant "http://clarify2020.eu/entity/CurrentStatus_" 
            ]
        ];   
        rr:predicateObjectMap [
            rr:predicate clarifyFun:columnValue;
            rr:objectMap [ 
                rml:reference "situation" 
            ]
        ];                         
    ].

<CauseOfDeath_Function_lc_clinical_notes_SLCG_monitoring_iterations>
    fnml:functionValue [
        rml:logicalSource [ rml:source "/mnt/e/CLARIFY-KG-pipeline/data/lc_clinical_notes_SLCG/monitoring_iterations.csv";
        rml:referenceFormulation ql:CSV 
                            ];
        rr:predicateObjectMap [
            rr:predicate fno:executes ;
            rr:objectMap [ 
                rr:constant clarifyFun:findSemantic 
            ]
        ];   
        rr:predicateObjectMap [
            rr:predicate clarifyFun:tableName;
            rr:objectMap [ 
                rr:constant "monitoring_iterations" 
            ]
        ];
        rr:predicateObjectMap [
            rr:predicate clarifyFun:columnName;
            rr:objectMap [ 
                rr:constant "death_cause" 
            ]
        ];
        rr:predicateObjectMap [
            rr:predicate clarifyFun:resource;
            rr:objectMap [ 
                rr:constant "http://clarify2020.eu/entity/" 
            ]
        ];   
        rr:predicateObjectMap [
            rr:predicate clarifyFun:columnValue;
            rr:objectMap [ 
                rml:reference "death_cause" 
            ]
        ];                         
    ].

<ReasonOfDeath_Function_lc_clinical_notes_SLCG_monitoring_iterations>
    fnml:functionValue [
        rml:logicalSource [ rml:source "/mnt/e/CLARIFY-KG-pipeline/data/lc_clinical_notes_SLCG/monitoring_iterations.csv";
        rml:referenceFormulation ql:CSV 
                            ];
        rr:predicateObjectMap [
            rr:predicate fno:executes ;
            rr:objectMap [ 
                rr:constant clarifyFun:findSemantic 
            ]
        ];   
        rr:predicateObjectMap [
            rr:predicate clarifyFun:tableName;
            rr:objectMap [ 
                rr:constant "monitoring_iterations" 
            ]
        ];
        rr:predicateObjectMap [
            rr:predicate clarifyFun:columnName;
            rr:objectMap [ 
                rr:constant "death_reason" 
            ]
        ];
        rr:predicateObjectMap [
            rr:predicate clarifyFun:resource;
            rr:objectMap [ 
                rr:constant "http://clarify2020.eu/entity/" 
            ]
        ];   
        rr:predicateObjectMap [
            rr:predicate clarifyFun:columnValue;
            rr:objectMap [ 
                rml:reference "death_reason" 
            ]
        ];                         
    ].

<second_neoplasm_Function_lc_clinical_notes_SLCG_monitoring_iterations>
    fnml:functionValue [
        rml:logicalSource [ rml:source "/mnt/e/CLARIFY-KG-pipeline/data/lc_clinical_notes_SLCG/monitoring_iterations.csv";
        rml:referenceFormulation ql:CSV 
                            ];
        rr:predicateObjectMap [
            rr:predicate fno:executes ;
            rr:objectMap [ 
                rr:constant clarifyFun:findSemantic 
            ]
        ];   
        rr:predicateObjectMap [
            rr:predicate clarifyFun:tableName;
            rr:objectMap [ 
                rr:constant "monitoring_iterations" 
            ]
        ];
        rr:predicateObjectMap [
            rr:predicate clarifyFun:columnName;
            rr:objectMap [ 
                rr:constant "second_neoplasm_presence" 
            ]
        ];
        rr:predicateObjectMap [
            rr:predicate clarifyFun:resource;
            rr:objectMap [ 
                rr:constant "http://clarify2020.eu/entity/" 
            ]
        ];   
        rr:predicateObjectMap [
            rr:predicate clarifyFun:columnValue;
            rr:objectMap [ 
                rml:reference "second_neoplasm_presence" 
            ]
        ];                         
    ].

<second_neoplasm_type_Function_lc_clinical_notes_SLCG_monitoring_iterations>
    fnml:functionValue [
        rml:logicalSource [ rml:source "/mnt/e/CLARIFY-KG-pipeline/data/lc_clinical_notes_SLCG/monitoring_iterations.csv";
        rml:referenceFormulation ql:CSV 
                            ];
        rr:predicateObjectMap [
            rr:predicate fno:executes ;
            rr:objectMap [ 
                rr:constant clarifyFun:findSemantic 
            ]
        ];   
        rr:predicateObjectMap [
            rr:predicate clarifyFun:tableName;
            rr:objectMap [ 
                rr:constant "monitoring_iterations" 
            ]
        ];
        rr:predicateObjectMap [
            rr:predicate clarifyFun:columnName;
            rr:objectMap [ 
                rr:constant "second_neoplasm_type" 
            ]
        ];
        rr:predicateObjectMap [
            rr:predicate clarifyFun:resource;
            rr:objectMap [ 
                rr:constant "http://clarify2020.eu/entity/" 
            ]
        ];   
        rr:predicateObjectMap [
            rr:predicate clarifyFun:columnValue;
            rr:objectMap [ 
                rml:reference "second_neoplasm_type" 
            ]
        ];                         
    ].