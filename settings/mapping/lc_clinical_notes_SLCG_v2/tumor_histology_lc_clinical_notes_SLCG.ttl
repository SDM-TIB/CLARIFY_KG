@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix rml: <http://semweb.mmlab.be/ns/rml#> .
@prefix ql: <http://semweb.mmlab.be/ns/ql#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix schema: <http://schema.org/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix fnml: <http://semweb.mmlab.be/ns/fnml#> .
@prefix fno: <https://w3id.org/function/ontology#> .
@prefix clarifyFun: <http://clarify2020.eu/function/> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix clarify: <http://clarify2020.eu/vocab/> .

<LCPatient_lc_clinical_notes_SLCG_tumor_histology>
	rml:logicalSource [ rml:source "/mnt/e/CLARIFY-KG-pipeline/data/lc_clinical_notes_SLCG/tumor_histology.csv";
						rml:referenceFormulation ql:CSV;
						];
	rr:subjectMap [
		rr:template "http://clarify2020.eu/entity/{EHR}";
		rr:class clarify:LCPatient
	];
	rr:predicateObjectMap [
		rr:predicate clarify:hasTumorHistology;
		rr:objectMap [ 
			rr:parentTriplesMap <TumorHistology_lc_clinical_notes_SLCG_tumor_histology>
		]
	].

<TumorHistology_lc_clinical_notes_SLCG_tumor_histology>
	rml:logicalSource [ rml:source "/mnt/e/CLARIFY-KG-pipeline/data/lc_clinical_notes_SLCG/tumor_histology.csv";
						rml:referenceFormulation ql:CSV;
						];
	rr:subjectMap <TumorType_Function_lc_clinical_notes_SLCG_tumor_histology> ;
	rr:termType rr:IRI;

	rr:predicateObjectMap [
		rr:predicate rdf:type;
		rr:objectMap [
			rr:template "http://clarify2020.eu/vocab/TumorType";		
		]
	];
	rr:predicateObjectMap [
		rr:predicate clarify:hasOriginalValue;
		rr:objectMap [
			rml:reference "type";		
		]
	];
	rr:predicateObjectMap [
		rr:predicate clarify:hasAdenocarcinomaHistology;
		rr:objectMap [
			rr:parentTriplesMap <AdenocarcinomaHistology_lc_clinical_notes_SLCG_tumor_histology>		
		]
	];
	rr:predicateObjectMap [
		rr:predicate clarify:hasSmallCellCarcinomaType;
		rr:objectMap [
			rr:parentTriplesMap <SmallCellCarcinomaType_lc_clinical_notes_SLCG_tumor_histology>
		]
	];	
	rr:predicateObjectMap [
		rr:predicate clarify:hasCarcinomaType;
		rr:objectMap [
			rr:parentTriplesMap <CarcinomaType_lc_clinical_notes_SLCG_tumor_histology>
		]
	];		
	rr:predicateObjectMap [
		rr:predicate clarify:hasMesotheliomaType;
		rr:objectMap [
			rr:parentTriplesMap <MesotheliomaType_lc_clinical_notes_SLCG_tumor_histology>		
		]
	];
	rr:predicateObjectMap [
		rr:predicate clarify:hasHistologyDegree;
		rr:objectMap [
			rr:parentTriplesMap <HistologyDegree_lc_clinical_notes_SLCG_tumor_histology>	
		]
	].

<AdenocarcinomaHistology_lc_clinical_notes_SLCG_tumor_histology>
	rml:logicalSource [ rml:source "/mnt/e/CLARIFY-KG-pipeline/data/lc_clinical_notes_SLCG/tumor_histology.csv";
						rml:referenceFormulation ql:CSV;
						];
	rr:subjectMap <AdenocarcinomaHistology_Function_lc_clinical_notes_SLCG_tumor_histology> ;
	rr:termType rr:IRI;

	rr:predicateObjectMap [
		rr:predicate rdf:type;
		rr:objectMap [
			rr:template "http://clarify2020.eu/vocab/AdenocarcinomaHistology";		
		]
	];
	rr:predicateObjectMap [
		rr:predicate clarify:hasOriginalValue;
		rr:objectMap [
			rml:reference "adeno_histology";		
		]
	].

<SmallCellCarcinomaType_lc_clinical_notes_SLCG_tumor_histology>
	rml:logicalSource [ rml:source "/mnt/e/CLARIFY-KG-pipeline/data/lc_clinical_notes_SLCG/tumor_histology.csv";
						rml:referenceFormulation ql:CSV;
						];
	rr:subjectMap <SmallCellCarcinomaType_Function_lc_clinical_notes_SLCG_tumor_histology> ;
	rr:termType rr:IRI;

	rr:predicateObjectMap [
		rr:predicate rdf:type;
		rr:objectMap [
			rr:template "http://clarify2020.eu/vocab/SmallCellCarcinomaType";		
		]
	];
	rr:predicateObjectMap [
		rr:predicate clarify:hasOriginalValue;
		rr:objectMap [
			rml:reference "small_cell_carcinom";		
		]
	].

<CarcinomaType_lc_clinical_notes_SLCG_tumor_histology>
	rml:logicalSource [ rml:source "/mnt/e/CLARIFY-KG-pipeline/data/lc_clinical_notes_SLCG/tumor_histology.csv";
						rml:referenceFormulation ql:CSV;
						];
	rr:subjectMap <CarcinomaType_Function_lc_clinical_notes_SLCG_tumor_histology> ;
	rr:termType rr:IRI;

	rr:predicateObjectMap [
		rr:predicate rdf:type;
		rr:objectMap [
			rr:template "http://clarify2020.eu/vocab/CarcinomaType";		
		]
	];
	rr:predicateObjectMap [
		rr:predicate clarify:hasOriginalValue;
		rr:objectMap [
			rml:reference "carcinom";		
		]
	].

<MesotheliomaType_lc_clinical_notes_SLCG_tumor_histology>
	rml:logicalSource [ rml:source "/mnt/e/CLARIFY-KG-pipeline/data/lc_clinical_notes_SLCG/tumor_histology.csv";
						rml:referenceFormulation ql:CSV;
						];
	rr:subjectMap <MesotheliomaType_Function_lc_clinical_notes_SLCG_tumor_histology> ;
	rr:termType rr:IRI;

	rr:predicateObjectMap [
		rr:predicate rdf:type;
		rr:objectMap [
			rr:template "http://clarify2020.eu/vocab/MesotheliomaType";		
		]
	];
	rr:predicateObjectMap [
		rr:predicate clarify:hasOriginalValue;
		rr:objectMap [
			rml:reference "mesothelioma";		
		]
	].

<HistologyDegree_lc_clinical_notes_SLCG_tumor_histology>
	rml:logicalSource [ rml:source "/mnt/e/CLARIFY-KG-pipeline/data/lc_clinical_notes_SLCG/tumor_histology.csv";
						rml:referenceFormulation ql:CSV;
						];
	rr:subjectMap <HistologyDegree_Function_lc_clinical_notes_SLCG_tumor_histology> ;
	rr:termType rr:IRI;

	rr:predicateObjectMap [
		rr:predicate rdf:type;
		rr:objectMap [
			rr:template "http://clarify2020.eu/vocab/HistologyDegree";		
		]
	];
	rr:predicateObjectMap [
		rr:predicate clarify:hasOriginalValue;
		rr:objectMap [
			rml:reference "degree";		
		]
	].

#######################################
############## Functions ##############
#######################################

<TumorType_Function_lc_clinical_notes_SLCG_tumor_histology>
    fnml:functionValue [
        rml:logicalSource [ rml:source "/mnt/e/CLARIFY-KG-pipeline/data/lc_clinical_notes_SLCG/tumor_histology.csv";
        rml:referenceFormulation ql:CSV 
                            ];
        rr:predicateObjectMap [
            rr:predicate fno:executes ;
            rr:objectMap [ 
                rr:constant clarifyFun:findSemantic 
            ]
        ];   
        rr:predicateObjectMap [
            rr:predicate clarifyFun:tableName;
            rr:objectMap [ 
                rr:constant "tumor_histology" 
            ]
        ];
        rr:predicateObjectMap [
            rr:predicate clarifyFun:columnName;
            rr:objectMap [ 
                rr:constant "type" 
            ]
        ];
        rr:predicateObjectMap [
            rr:predicate clarifyFun:resource;
            rr:objectMap [ 
                rr:constant "http://clarify2020.eu/entity/" 
            ]
        ];   
        rr:predicateObjectMap [
            rr:predicate clarifyFun:columnValue;
            rr:objectMap [ 
                rml:reference "type" 
            ]
        ];                         
    ].

<AdenocarcinomaHistology_Function_lc_clinical_notes_SLCG_tumor_histology>
    fnml:functionValue [
        rml:logicalSource [ rml:source "/mnt/e/CLARIFY-KG-pipeline/data/lc_clinical_notes_SLCG/tumor_histology.csv";
        rml:referenceFormulation ql:CSV 
                            ];
        rr:predicateObjectMap [
            rr:predicate fno:executes ;
            rr:objectMap [ 
                rr:constant clarifyFun:findSemantic 
            ]
        ];   
        rr:predicateObjectMap [
            rr:predicate clarifyFun:tableName;
            rr:objectMap [ 
                rr:constant "tumor_histology" 
            ]
        ];
        rr:predicateObjectMap [
            rr:predicate clarifyFun:columnName;
            rr:objectMap [ 
                rr:constant "adeno_histology" 
            ]
        ];
        rr:predicateObjectMap [
            rr:predicate clarifyFun:resource;
            rr:objectMap [ 
                rr:constant "http://clarify2020.eu/entity/" 
            ]
        ];   
        rr:predicateObjectMap [
            rr:predicate clarifyFun:columnValue;
            rr:objectMap [ 
                rml:reference "adeno_histology" 
            ]
        ];                         
    ].

<SmallCellCarcinomaType_Function_lc_clinical_notes_SLCG_tumor_histology>
    fnml:functionValue [
        rml:logicalSource [ rml:source "/mnt/e/CLARIFY-KG-pipeline/data/lc_clinical_notes_SLCG/tumor_histology.csv";
        rml:referenceFormulation ql:CSV 
                            ];
        rr:predicateObjectMap [
            rr:predicate fno:executes ;
            rr:objectMap [ 
                rr:constant clarifyFun:findSemantic 
            ]
        ];   
        rr:predicateObjectMap [
            rr:predicate clarifyFun:tableName;
            rr:objectMap [ 
                rr:constant "tumor_histology" 
            ]
        ];
        rr:predicateObjectMap [
            rr:predicate clarifyFun:columnName;
            rr:objectMap [ 
                rr:constant "small_cell_carcinom" 
            ]
        ];
        rr:predicateObjectMap [
            rr:predicate clarifyFun:resource;
            rr:objectMap [ 
                rr:constant "http://clarify2020.eu/entity/" 
            ]
        ];   
        rr:predicateObjectMap [
            rr:predicate clarifyFun:columnValue;
            rr:objectMap [ 
                rml:reference "small_cell_carcinom" 
            ]
        ];                         
    ].

<CarcinomaType_Function_lc_clinical_notes_SLCG_tumor_histology>
    fnml:functionValue [
        rml:logicalSource [ rml:source "/mnt/e/CLARIFY-KG-pipeline/data/lc_clinical_notes_SLCG/tumor_histology.csv";
        rml:referenceFormulation ql:CSV 
                            ];
        rr:predicateObjectMap [
            rr:predicate fno:executes ;
            rr:objectMap [ 
                rr:constant clarifyFun:findSemantic 
            ]
        ];   
        rr:predicateObjectMap [
            rr:predicate clarifyFun:tableName;
            rr:objectMap [ 
                rr:constant "tumor_histology" 
            ]
        ];
        rr:predicateObjectMap [
            rr:predicate clarifyFun:columnName;
            rr:objectMap [ 
                rr:constant "carcinom" 
            ]
        ];
        rr:predicateObjectMap [
            rr:predicate clarifyFun:resource;
            rr:objectMap [ 
                rr:constant "http://clarify2020.eu/entity/" 
            ]
        ];   
        rr:predicateObjectMap [
            rr:predicate clarifyFun:columnValue;
            rr:objectMap [ 
                rml:reference "carcinom" 
            ]
        ];                         
    ].

<MesotheliomaType_Function_lc_clinical_notes_SLCG_tumor_histology>
    fnml:functionValue [
        rml:logicalSource [ rml:source "/mnt/e/CLARIFY-KG-pipeline/data/lc_clinical_notes_SLCG/tumor_histology.csv";
        rml:referenceFormulation ql:CSV 
                            ];
        rr:predicateObjectMap [
            rr:predicate fno:executes ;
            rr:objectMap [ 
                rr:constant clarifyFun:findSemantic 
            ]
        ];   
        rr:predicateObjectMap [
            rr:predicate clarifyFun:tableName;
            rr:objectMap [ 
                rr:constant "tumor_histology" 
            ]
        ];
        rr:predicateObjectMap [
            rr:predicate clarifyFun:columnName;
            rr:objectMap [ 
                rr:constant "mesothelioma" 
            ]
        ];
        rr:predicateObjectMap [
            rr:predicate clarifyFun:resource;
            rr:objectMap [ 
                rr:constant "http://clarify2020.eu/entity/" 
            ]
        ];   
        rr:predicateObjectMap [
            rr:predicate clarifyFun:columnValue;
            rr:objectMap [ 
                rml:reference "mesothelioma" 
            ]
        ];                         
    ].

<HistologyDegree_Function_lc_clinical_notes_SLCG_tumor_histology>
    fnml:functionValue [
        rml:logicalSource [ rml:source "/mnt/e/CLARIFY-KG-pipeline/data/lc_clinical_notes_SLCG/tumor_histology.csv";
        rml:referenceFormulation ql:CSV 
                            ];
        rr:predicateObjectMap [
            rr:predicate fno:executes ;
            rr:objectMap [ 
                rr:constant clarifyFun:findSemantic 
            ]
        ];   
        rr:predicateObjectMap [
            rr:predicate clarifyFun:tableName;
            rr:objectMap [ 
                rr:constant "tumor_histology" 
            ]
        ];
        rr:predicateObjectMap [
            rr:predicate clarifyFun:columnName;
            rr:objectMap [ 
                rr:constant "degree" 
            ]
        ];
        rr:predicateObjectMap [
            rr:predicate clarifyFun:resource;
            rr:objectMap [ 
                rr:constant "http://clarify2020.eu/entity/" 
            ]
        ];   
        rr:predicateObjectMap [
            rr:predicate clarifyFun:columnValue;
            rr:objectMap [ 
                rml:reference "degree" 
            ]
        ];                         
    ].